
演算処理は大体のケースで二者間で行われる。レジスタ間なので。

符号の有り無しで処理が分かれる

C = constant
.t = top
.b = bottom

Add
	z = x + C
		z.t = x.t + C
		z.b = x.b + C

	z = x + y
		z.t = x.t + y.t
		z.b = x.b + y.b

Sub
	z = x - C
		z.t = x.t - C
		z.b = x.b - C

	z = x - y
		z.t = x.t - y.b
		z.b = x.b - y.t
	
Mul

	z = x * C
		if (x.t == 0 && x.b == 0) || C == 0
			z.t = 0
			z.b = 0
		if C > 0
			z.t = x.t * C					# positive scale
			z.b = x.b * C					
		else # C < 0
			z.t = x.b * C					# negative scale
			z.b = x.t * C
		
	
	z = x * y
		if (x.t == 0 && x.b == 0) || (y.t == 0 && y.b == 0)
			z.t = 0
			z.b = 0
			
		elif y.b > 0 # y > 0
			z.t = x.t * y.t						# ? * +
			z.b = x.b * y.b						# ? * +
		
		elif y.t < 0 # y < 0
		
			if x.b > 0 # x > 0
				z.t = x.b * y.t					# min+ * max- = max-
				z.b = x.t * y.b					# max+ * min- = min-
			else # x.b <= 0
				z.t = x.b * y.b					# min- * min- = max+
				if x.t < 0 # x < 0
					z.b = x.t * y.t				# min- * max- = min+
				else # x.b <= 0 && x.t >= 0
					z.b = x.t * y.b 			# max+ * min- = min-
				
		else # y.b <= 0 && y.t >= 0
			
			if x.b > 0 # x > 0
				z.t = x.t * y.t					# max+ * max+ = max+
				z.b = x.t * y.b					# max+ * min- = min-
				
			elif x.t < 0 # x < 0
				z.t = x.b * y.b					# min- * min- = max+
				z.b = x.b * y.t					# min- * max+ = min-
				
			else # x.b <= 0 && x.t >= 0
				z.t = max(
							x.t * y.t,			# max+ * max+ = max+
							x.b * y.b			# min- * min- = max+
						)
				z.b = min(
							x.t * y.b,			# max+ * min- = min-
							x.b * y.t			# min- * max+ = min-
						)


Div

	z = x / C
		if x.t == 0 && x.b == 0
			z.t = 0
			z.b = 0
		if C == 0
			zero division !!
		elif C > 0
			z.t = x.t / C						# positive scale
			z.b = x.b / C
		else # C < 0
			z.t = x.b / C						# negative scale
			z.b = x.t / C
	
	
	z = x / y
		if x.t == 0 && x.b == 0
			z.t = 0
			z.b = 0
		if y.t == 0 && y.b == 0
			zero division !!
		elif y.b > 0 # y > 0
			
			if x.t >= 0
				z.t = x.t / y.b				# +u = +u / +b
			else # x < 0
				z.t = x.t / y.t				# -u = -u / +u
			
			if x.b > 0 # x > 0
				z.b = x.b / y.t				# +b = +b / +t
			else # x.b <= 0
				z.b = x.b / y.b				# -b = -b / +b
			
		elif y.t < 0 # y < 0
			
			if x.b >= 0 # x >= 0
				z.t = x.b / y.b				# -t = +b / -b
			else # x.b < 0
				z.t = x.b / y.t				# +t = -b / -t
			
			if x.t >= 0
				z.b = x.t / y.t				# -b = +t / -t
			else # x < 0
				z.b = x.t / y.b				# +b = -t / -b
			
		else # y.b <= 0 && y.t >= 0
			
			zero division warning
			
			if x.b >= 0 # x >= 0
				
				if y.t == 0
					z.t = x.b / y.b			# -t = +b / -b
				else
					z.t = x.t / 1			# +t = +t / 1
				
				if y.b == 0
					z.b = x.b / y.t			# +b = +b / +t
				else
					z.b = x.t / -1			# -b = +t / -1
				
			elif x.t <= 0 # x <= 0
				
				if y.b == 0
					z.t = x.t / y.t			# -t = -t / +t
				else # y.b < 0
					z.t = x.b / -1			# +t = -b / -1
				
				if y.t == 0
					z.b = x.t / y.b			# +b = -t / -b
				else # y.t > 0
					z.b = x.b / 1 			# -b = -b / 1
				
			else # x.b < 0 && x.t > 0
				
				if y.t == 0
					z.t = x.b / -1			# +t = -b / -1
					z.b = x.t / -1			# -b = +t / -1
				elif y.b == 0
					z.t = x.t / 1			# +t = +t / 1
					z.b = x.b / 1			# -b = -b / 1
				else
					z.t = max(
							x.t / 1,		# +t = +t / 1
							x.b / -1		# +t = -b / -1
							)
					z.b = min(
							x.t / -1,		# -b = +t / -1
							x.b / 1			# -b = -b / 1
							)

